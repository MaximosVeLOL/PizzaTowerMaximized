Most decompiles dont have these, I wonder why?

Anyways, here's how this game works.

When the game starts up, it goes into Room_Init, and creates the global.settings variable, creates the needed objects (also known as core objects), and goes to Room_Disclaimer.


Moving Objects -
Most movable objects in ETB (enemies, the player) have these 4 variables in their create code: state, hsp, vsp, and movespeed.
Most movable objects in THIS game (enemies, player objects), have these 3 variables: state, velocity, and movespeed (do enemies have that?).
Enemies in ETB are based of the player, and use most of his settings (mass, bounding box, states, ect.)
Enemies in THIS game are based on an enemy parent, and is completely different than the player (except for collision and state machines)



Files -

Files are saved and loaded by using buffers, why so? Because everytime I tried to use file_text functions, they would fail on me. (file_ini isn't a good option for structs)
All files (I think?) are saved in compressed raw string values. So no encoding like UTF-8.
To uncompress/compress, you would need to use zlib and do your things there.

Collision -
I hate collison. That's it.

Collision is directly ripped of off an already existing ETB decompile (thecoreguy's dem0 project)
To collide with objects, use the script CollideAndMove()

Core Objects - 
These objects are needed in the game, or else the game will die!
These objects include: o_Camera, o_GameManager (duh), o_MusicManager, and o_MultiplayerManager (as of now, I will remove this in a later update)